#!/usr/bin/env python

# urot13.py
#
# A Unicode-aware rot13 implementation.
#
# updated: 2016-06-03

import sys

# This hash maps the code points of supported precomposed Unicode characters
# to a tuple containing the code points of the base character and the
# combining diacritics that combine to make that character.
DATA = { 7935: (121,), 7934: (89,), 7929: (121, 771), 7928: (89, 771),
    7927: (121, 777), 7926: (89, 777), 7925: (121, 803), 7924: (89, 803),
    7923: (121, 768), 7922: (89, 768), 7921: (117, 795, 803),
    7920: (85, 795, 803), 7919: (117, 795, 771), 7918: (85, 795, 771),
    7917: (117, 795, 777), 7916: (85, 795, 777), 7915: (117, 795, 768),
    7914: (85, 795, 768), 7913: (117, 795, 769), 7912: (85, 795, 769),
    7911: (117, 777), 7910: (85, 777), 7909: (117, 803), 7908: (85, 803),
    7907: (111, 795, 803), 7906: (79, 795, 803), 7905: (111, 795, 771),
    7904: (79, 795, 771), 7903: (111, 795, 777), 7902: (79, 795, 777),
    7901: (111, 795, 768), 7900: (79, 795, 768), 7899: (111, 795, 769),
    7898: (79, 795, 769), 7897: (111, 770, 803), 7896: (79, 770, 803),
    7895: (111, 770, 771), 7894: (79, 770, 771), 7893: (111, 770, 777),
    7892: (79, 770, 777), 7891: (111, 770, 768), 7890: (79, 770, 768),
    7889: (111, 770, 769), 7888: (79, 770, 769), 7887: (111, 777),
    7886: (79, 777), 7885: (111, 803), 7884: (79, 803), 7883: (105, 803),
    7882: (73, 803), 7881: (105, 777), 7880: (73, 777), 7879: (101, 770, 803),
    7878: (69, 770, 803), 7877: (101, 770, 771), 7876: (69, 770, 771),
    7875: (101, 770, 777), 7874: (69, 770, 777), 7873: (101, 770, 768),
    7872: (69, 770, 768), 7871: (101, 770, 769), 7870: (69, 770, 769),
    7869: (101, 771), 7868: (69, 771), 7867: (101, 777), 7866: (69, 777),
    7865: (101, 803), 7864: (69, 803), 7863: (97, 774, 803),
    7862: (65, 774, 803), 7861: (97, 774, 771), 7860: (65, 774, 771),
    7859: (97, 774, 777), 7858: (65, 774, 777), 7857: (97, 774, 768),
    7856: (65, 774, 768), 7855: (97, 774, 769), 7854: (65, 774, 769),
    7853: (97, 770, 803), 7852: (65, 770, 803), 7851: (97, 770, 771),
    7850: (65, 770, 771), 7849: (97, 770, 777), 7848: (65, 770, 777),
    7847: (97, 770, 768), 7846: (65, 770, 768), 7845: (97, 770, 769),
    7844: (65, 770, 769), 7843: (97, 777), 7842: (65, 777), 7841: (97, 803),
    7840: (65, 803), 7834: (97, 855), 7833: (121, 778), 7832: (119, 778),
    7831: (116, 776), 7830: (104, 817), 7829: (122, 817), 7828: (90, 817),
    7827: (122, 803), 7826: (90, 803), 7825: (122, 770), 7824: (90, 770),
    7823: (121, 775), 7822: (89, 775), 7821: (120, 776), 7820: (88, 776),
    7819: (120, 775), 7818: (88, 775), 7817: (119, 803), 7816: (87, 803),
    7815: (119, 775), 7814: (87, 775), 7813: (119, 776), 7812: (87, 776), 
    7811: (119, 769), 7810: (87, 769), 7809: (119, 768), 7808: (87, 768),
    7807: (118, 803), 7806: (86, 803), 7805: (118, 771), 7804: (86, 771),
    7803: (117, 772, 776), 7802: (85, 772, 776), 7801: (117, 771, 769),
    7800: (85, 771, 769), 7799: (117, 813), 7798: (85, 813), 7797: (117, 816),
    7796: (85, 816), 7795: (117, 804), 7794: (85, 804), 7793: (116, 813),
    7792: (84, 813), 7791: (116, 817), 7790: (84, 817), 7789: (116, 803),
    7788: (84, 803), 7787: (116, 775), 7786: (84, 775), 7785: (115, 803, 775),
    7784: (83, 803, 775), 7783: (115, 780, 775), 7782: (83, 780, 775),
    7781: (115, 769, 775), 7780: (83, 769, 775), 7779: (115, 803),
    7778: (83, 803), 7777: (115, 775), 7776: (83, 775), 7775: (114, 817),
    7774: (82, 817), 7773: (114, 803, 772), 7772: (82, 803, 772),
    7771: (114, 803), 7770: (82, 803), 7769: (114, 775), 7768: (82, 775),
    7767: (112, 775), 7766: (80, 775), 7765: (112, 769), 7764: (80, 769),
    7763: (111, 772, 769), 7762: (79, 772, 769), 7761: (111, 772, 768),
    7760: (79, 772, 768), 7759: (111, 771, 776), 7758: (79, 771, 776),
    7757: (111, 771, 769), 7756: (79, 771, 769), 7755: (110, 813),
    7754: (78, 813), 7753: (110, 817), 7752: (78, 817), 7751: (110, 803),
    7750: (78, 803), 7749: (110, 775), 7748: (78, 775), 7747: (109, 803),
    7746: (77, 803), 7745: (109, 775), 7744: (77, 775), 7743: (109, 769),
    7742: (77, 769), 7741: (108, 813), 7740: (76, 813), 7739: (108, 817),
    7738: (76, 817), 7737: (108, 803, 772), 7736: (76, 803, 772),
    7735: (108, 803), 7734: (76, 803), 7733: (107, 817), 7732: (75, 817),
    7731: (107, 803), 7730: (75, 803), 7729: (107, 769), 7728: (75, 769),
    7727: (105, 776, 769), 7726: (73, 776, 769), 7725: (105, 816),
    7724: (73, 816), 7723: (104, 814), 7722: (72, 814), 7721: (104, 807),
    7720: (72, 807), 7719: (104, 776), 7718: (72, 776), 7717: (104, 803),
    7716: (72, 803), 7715: (104, 775), 7714: (72, 775), 7713: (103, 772),
    7712: (71, 772), 7711: (102, 775), 7710: (70, 775), 7709: (101, 807, 774),
    7708: (69, 807, 774), 7707: (101, 816), 7706: (69, 816), 7705: (101, 813),
    7704: (69, 813), 7703: (101, 772, 769), 7702: (69, 772, 769),
    7701: (101, 772, 768), 7700: (69, 772, 768), 7699: (100, 813),
    7698: (68, 813), 7697: (100, 807), 7696: (68, 807), 7695: (100, 817),
    7694: (68, 817), 7693: (100, 803), 7692: (68, 803), 7691: (100, 775),
    7690: (68, 775), 7689: (99, 807, 769), 7688: (67, 807, 769),
    7687: (98, 817), 7686: (66, 817), 7685: (98, 803), 7684: (66, 803),
    7683: (98, 775), 7682: (66, 775), 7681: (97, 805), 7680: (65, 805),
    591: (121, 821), 590: (89, 822), 589: (114, 821), 588: (82, 822),
    587: (113, 802), 585: (106, 821), 584: (74, 822), 583: (101, 821),
    582: (69, 822), 579: (66, 822), 576: (122,), 575: (115,), 574: (84, 824),
    573: (76,), 572: (99, 821), 571: (67, 822), 570: (65, 822), 566: (116,),
    565: (110,), 564: (108,), 563: (121, 772), 562: (89, 772),
    561: (111, 775, 772), 560: (79, 775, 772), 559: (111, 775), 558: (79, 775),
    557: (111, 771, 772), 556: (79, 771, 772), 555: (111, 776, 772),
    554: (79, 776, 772), 553: (101, 807), 552: (69, 807), 551: (97, 775),
    550: (65, 775), 549: (122, 777), 548: (90, 777), 545: (100,), 544: (78,),
    543: (104, 780), 542: (72, 780), 539: (116, 806), 538: (84, 806),
    537: (115, 806), 536: (83, 806), 535: (117, 785), 534: (85, 785),
    533: (117, 783), 532: (85, 783), 531: (114, 785), 530: (82, 785),
    529: (114, 783), 528: (82, 783), 527: (111, 785), 526: (79, 785),
    525: (111, 783), 524: (79, 783), 523: (105, 785), 522: (73, 785),
    521: (105, 783), 520: (73, 783), 519: (101, 785), 518: (69, 785),
    517: (101, 783), 516: (69, 783), 515: (97, 785), 514: (65, 785),
    513: (97, 783), 512: (65, 783), 511: (111, 821, 769), 510: (79, 822, 769),
    507: (97, 778, 769), 506: (65, 778, 769), 505: (110, 768), 504: (78, 768),
    501: (103, 769), 500: (71, 769), 498: (68,), 496: (106, 780),
    493: (111, 808, 772), 492: (79, 808, 772), 491: (111, 808), 490: (79, 808),
    489: (107, 780), 488: (75, 780), 487: (103, 780), 486: (71, 780),
    485: (103, 821), 484: (71, 822), 481: (97, 775, 772), 480: (65, 775, 772),
    479: (97, 776, 772), 478: (65, 776, 772), 476: (117, 776, 768),
    475: (85, 776, 768), 474: (117, 776, 780), 473: (85, 776, 780),
    472: (117, 776, 769), 471: (85, 776, 769), 470: (117, 776, 772),
    469: (85, 776, 772), 468: (117, 780), 467: (85, 780), 466: (111, 780),
    465: (79, 780), 464: (105, 780), 463: (73, 780), 462: (97, 780),
    461: (65, 780), 459: (78,), 456: (76,), 453: (68,), 438: (122, 821),
    437: (90, 822), 436: (121, 777), 435: (89, 777), 434: (86, 777),
    432: (117, 795), 431: (85, 795), 430: (84, 802), 429: (116, 777),
    428: (84, 777), 427: (116, 801), 421: (112, 777), 420: (80, 777),
    417: (111, 795), 416: (79, 795), 415: (79, 820), 414: (110,),
    413: (78,), 410: (108,), 409: (107, 777), 408: (75, 777), 407: (73, 822),
    403: (71, 777), 402: (102, 777), 401: (70, 777), 396: (100,), 395: (68,),
    394: (68, 777), 392: (99, 777), 391: (67, 777), 387: (98,), 386: (66,),
    385: (66, 777), 384: (98, 821), 382: (122, 780), 381: (90, 780),
    380: (122, 775), 379: (90, 775), 378: (122, 769), 377: (90, 769),
    376: (89, 776), 375: (121, 770), 374: (89, 770), 373: (119, 770),
    372: (87, 770), 371: (117, 808), 370: (85, 808), 369: (117, 779),
    368: (85, 779), 367: (117, 778), 366: (85, 778), 365: (117, 774),
    364: (85, 774), 363: (117, 772), 362: (85, 772), 361: (117, 771),
    360: (85, 771), 359: (116, 821), 358: (84, 822), 357: (116, 780),
    356: (84, 780), 355: (116, 807), 354: (84, 807), 353: (115, 780),
    352: (83, 780), 351: (115, 807), 350: (83, 807), 349: (115, 770),
    348: (83, 770), 347: (115, 769), 346: (83, 769), 345: (114, 780),
    344: (82, 780), 343: (114, 807), 342: (82, 807), 341: (114, 769),
    340: (82, 769), 337: (111, 779), 336: (79, 779), 335: (111, 774),
    334: (79, 774), 333: (111, 772), 332: (79, 772), 328: (110, 780),
    327: (78, 780), 326: (110, 807), 325: (78, 807), 324: (110, 769),
    323: (78, 769), 322: (108, 821), 321: (76, 822), 320: (108,), 319: (76,),
    318: (108, 780), 317: (76, 780), 316: (108, 807), 315: (76, 807),
    314: (108, 769), 313: (76, 769), 311: (107, 807), 310: (75, 807),
    309: (106, 770), 308: (74, 770), 304: (73, 775), 303: (105, 808),
    302: (73, 808), 301: (105, 774), 300: (73, 774), 299: (105, 772),
    298: (73, 772), 297: (105, 771), 296: (73, 771), 295: (104, 821),
    294: (72, 822), 293: (104, 770), 292: (72, 770), 291: (103, 807),
    290: (71, 807), 289: (103, 775), 288: (71, 775), 287: (103, 774),
    286: (71, 774), 285: (103, 770), 284: (71, 770), 283: (101, 780),
    282: (69, 780), 281: (101, 808), 280: (69, 808), 279: (101, 775),
    278: (69, 775), 277: (101, 774), 276: (69, 774), 275: (101, 772),
    274: (69, 772), 273: (100, 821), 272: (68, 822), 271: (100, 780),
    270: (68, 780), 269: (99, 780), 268: (67, 780), 267: (99, 775),
    266: (67, 775), 265: (99, 770), 264: (67, 770), 263: (99, 769),
    262: (67, 769), 261: (97, 808), 260: (65, 808), 259: (97, 774),
    258: (65, 774), 257: (97, 772), 256: (65, 772), 255: (121, 776),
    253: (121, 769), 252: (117, 776), 251: (117, 770), 250: (117, 769),
    249: (117, 768), 248: (111, 821), 246: (111, 776), 245: (111, 771),
    244: (111, 770), 243: (111, 769), 242: (111, 768), 241: (110, 771),
    239: (105, 776), 238: (105, 770), 237: (105, 769), 236: (105, 768),
    235: (101, 776), 234: (101, 770), 233: (101, 769), 232: (101, 768),
    231: (99, 807), 229: (97, 778), 228: (97, 776), 227: (97, 771),
    226: (97, 770), 225: (97, 769), 224: (97, 768), 221: (89, 769),
    220: (85, 776), 219: (85, 770), 218: (85, 769), 217: (85, 768),
    216: (79, 822), 214: (79, 776), 213: (79, 771), 212: (79, 770),
    211: (79, 769), 210: (79, 768), 209: (78, 771), 207: (73, 776),
    206: (73, 770), 205: (73, 769), 204: (73, 768), 203: (69, 776),
    202: (69, 770), 201: (69, 769), 200: (69, 768), 199: (67, 807),
    197: (65, 778), 196: (65, 776), 195: (65, 771), 194: (65, 770),
    193: (65, 769), 192: (65, 768)
}

# These are the code points of the beginnings of the contiguous ranges of
# characters that can be rotated.
RANGES = [
    ord(u'A'), ord(u'a'),
    0x249c,  # parenthesized latin small letter a
    0x24b6,  # circled latin capital letter a
    0x24d0,  # circled latin small letter a
    0xff21,  # fullwidth latin capital letter a
    0xff41,  # fullwidth latin small letter a
    0x1f110, # parenthesized latin capital letter a
    0x1f130, # squared latin capital letter a
    0x1f150, # negative circled latin capital letter a
    0x1f170, # negative squared latin capital letter a
    0x1f1e6  # regional indicator symbol letter a
]

def determine_range(cp):
    '''If code point cp is in one of the contiguous ranges of characters
    that can be rotated, return the code point of the low end of that range.
    Otherwise, return None.'''
    for low in RANGES:
        if low <= cp and cp < low+26:
            return low
    return None

def range_rotate(cp):
    '''If code point cp is in one of the ranges to be rotated, rotate it;
    otherwise, pass it through unchanged.'''
    low = determine_range(cp)
    if low is not None:
        return low + ((cp - low + 13) % 26)
    else:
        return cp

def unicode_rot13(cp):
    '''If cp is the code point of a supported precomposed Unicode character,
    decompose it into a base character and a series of combining diacritics,
    rotate the base character, and return the tuple of code points that combine
    to make the rotated character.'''
    try:
        x = DATA[cp]
        return (range_rotate(x[0]), ) + x[1:]
    except KeyError:
        return (range_rotate(cp), )

def munch_line(line):
    '''Perform rot13 on a single line of text.'''
    out = []
    for c in line.decode('utf-8'):
        out.extend(unicode_rot13(ord(c)))
    return ''.join([unichr(x) for x in out])

while True:
    line = sys.stdin.readline()
    if line == '':
        exit(0)
    else:
        sys.stdout.write(munch_line(line).encode('utf-8'))
